{"ast":null,"code":"var _jsxFileName = \"/home/amuriel/GameDataBase/tag-generator2/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport yaml from 'js-yaml';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _currentCategory$subc2;\n  const [tagsData, setTagsData] = useState({});\n  const [selectedTags, setSelectedTags] = useState(new Set());\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [selectedSubcategory, setSelectedSubcategory] = useState('');\n  useEffect(() => {\n    // Cambiado para depurar el proceso de carga\n    fetch('/tags.yml').then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.text();\n    }).then(text => {\n      console.log('YAML text loaded:', text.substring(0, 100)); // Mostrar primeros 100 caracteres\n      const data = yaml.load(text);\n      console.log('Parsed data:', data);\n      setTagsData(data);\n    }).catch(error => {\n      console.error('Error detallado:', error);\n      alert('Error al cargar las categorías. Revisa la consola para más detalles.');\n    });\n  }, []);\n  const handleCategoryChange = event => {\n    var _tagsData$category;\n    const category = event.target.value;\n    setSelectedCategory(category);\n    setSelectedSubcategory('');\n\n    // Si la categoría es simple y no tiene valores, generar tag parcial\n    if (((_tagsData$category = tagsData[category]) === null || _tagsData$category === void 0 ? void 0 : _tagsData$category.type) === 'simple' && Object.keys(tagsData[category].values || {}).length === 0) {\n      const partialTag = `${category}#`;\n      setSelectedTags(prev => {\n        const next = new Set(prev);\n        Array.from(next).forEach(existingTag => {\n          if (existingTag.startsWith(`${category}#`)) {\n            next.delete(existingTag);\n          }\n        });\n        next.add(partialTag);\n        return next;\n      });\n\n      // Resetear selecciones\n      setSelectedCategory('');\n    }\n  };\n  const handleSubcategoryChange = event => {\n    var _currentCategory$subc;\n    const subcat = event.target.value;\n    setSelectedSubcategory(subcat);\n\n    // Si la subcategoría no tiene valores, generar tag parcial\n    if ((currentCategory === null || currentCategory === void 0 ? void 0 : currentCategory.type) === 'nested' && Object.keys(((_currentCategory$subc = currentCategory.subcategories) === null || _currentCategory$subc === void 0 ? void 0 : _currentCategory$subc[subcat].values) || {}).length === 0) {\n      const partialTag = `${selectedCategory}#${subcat}`;\n\n      // Eliminar tag anterior de la misma categoría si existe\n      setSelectedTags(prev => {\n        const next = new Set(prev);\n        Array.from(next).forEach(existingTag => {\n          if (existingTag.startsWith(`${selectedCategory}#`)) {\n            next.delete(existingTag);\n          }\n        });\n        next.add(partialTag);\n        return next;\n      });\n\n      // Resetear selecciones\n      setSelectedCategory('');\n      setSelectedSubcategory('');\n    }\n  };\n  const getValueDisplay = value => {\n    if (typeof value === 'string') return value;\n    if (value.name) return value.name;\n    return 'Sin descripción';\n  };\n  const handleValueSelect = value => {\n    let newTag;\n    if ((currentCategory === null || currentCategory === void 0 ? void 0 : currentCategory.type) === 'simple') {\n      newTag = `${selectedCategory}#${value}`;\n    } else if ((currentCategory === null || currentCategory === void 0 ? void 0 : currentCategory.type) === 'nested' && selectedSubcategory) {\n      newTag = `${selectedCategory}#${selectedSubcategory}:${value}`;\n    } else {\n      return;\n    }\n\n    // Eliminar cualquier tag existente de la misma categoría principal\n    setSelectedTags(prev => {\n      const next = new Set(prev);\n      // Buscar y eliminar tags existentes de la misma categoría\n      Array.from(next).forEach(existingTag => {\n        if (existingTag.startsWith(`${selectedCategory}#`)) {\n          next.delete(existingTag);\n        }\n      });\n      // Añadir el nuevo tag\n      next.add(newTag);\n      return next;\n    });\n\n    // Resetear selecciones\n    setSelectedCategory('');\n    setSelectedSubcategory('');\n  };\n  const removeTag = tag => {\n    setSelectedTags(prev => {\n      const next = new Set(prev);\n      next.delete(tag);\n      return next;\n    });\n  };\n  const copyToClipboard = () => {\n    const text = Array.from(selectedTags).sort().join('\\n');\n    navigator.clipboard.writeText(text);\n    alert('Tags copiados al portapapeles!');\n  };\n  const mainCategories = Object.entries(tagsData).filter(([category]) =>\n  // Filtrar solo las categorías principales válidas\n  category !== 'tag_structure' && category !== 'search' && (tagsData[category].type === 'simple' || tagsData[category].type === 'nested')).map(([category, data]) => ({\n    id: category,\n    name: getCategoryDisplayName(category, data)\n  })).sort((a, b) => a.name.localeCompare(b.name));\n  function getCategoryDisplayName(category, data) {\n    // Usar description si existe, sino formatear el nombre de la categoría\n    return data.description || category.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n  }\n  const currentCategory = selectedCategory ? tagsData[selectedCategory] : null;\n\n  // Añadir log para depurar las categorías principales\n  console.log('Current tagsData:', tagsData);\n  console.log('Main categories:', mainCategories);\n  const hasValues = (category, subcategory) => {\n    if (category.type === 'simple') {\n      return Object.keys(category.values || {}).length > 0;\n    } else if (category.type === 'nested' && subcategory) {\n      var _category$subcategori;\n      return Object.keys(((_category$subcategori = category.subcategories) === null || _category$subcategori === void 0 ? void 0 : _category$subcategori[subcategory].values) || {}).length > 0;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Generador de Tags\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Seleccionar Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCategory,\n          onChange: handleCategoryChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Seleccionar Categor\\xEDa...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), mainCategories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category.id,\n            children: category.name\n          }, category.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), (currentCategory === null || currentCategory === void 0 ? void 0 : currentCategory.type) === 'nested' && /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedSubcategory,\n          onChange: handleSubcategoryChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Seleccionar Subcategor\\xEDa...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), Object.entries(currentCategory.subcategories || {}).map(([subcat, data]) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: subcat,\n            children: data.description || subcat.replace(/_/g, ' ')\n          }, subcat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), ((currentCategory === null || currentCategory === void 0 ? void 0 : currentCategory.type) === 'simple' && hasValues(currentCategory) || (currentCategory === null || currentCategory === void 0 ? void 0 : currentCategory.type) === 'nested' && selectedSubcategory && hasValues(currentCategory, selectedSubcategory)) && /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => handleValueSelect(e.target.value),\n          value: \"\",\n          disabled: !selectedCategory || (currentCategory === null || currentCategory === void 0 ? void 0 : currentCategory.type) === 'nested' && !selectedSubcategory,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Seleccionar Valor...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), (currentCategory === null || currentCategory === void 0 ? void 0 : currentCategory.type) === 'simple' && currentCategory.values && Object.entries(currentCategory.values).sort(([a], [b]) => a.localeCompare(b)).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: key,\n            children: getValueDisplay(value)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 21\n          }, this)), (currentCategory === null || currentCategory === void 0 ? void 0 : currentCategory.type) === 'nested' && selectedSubcategory && Object.entries(((_currentCategory$subc2 = currentCategory.subcategories) === null || _currentCategory$subc2 === void 0 ? void 0 : _currentCategory$subc2[selectedSubcategory].values) || {}).sort(([a], [b]) => a.localeCompare(b)).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: key,\n            children: getValueDisplay(value)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-tags\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tags Seleccionados:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tags-list\",\n        children: Array.from(selectedTags).sort().map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag\",\n          children: [tag, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeTag(tag),\n            title: \"Eliminar\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)]\n        }, tag, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        readOnly: true,\n        value: Array.from(selectedTags).sort().join('\\n'),\n        placeholder: \"Los tags seleccionados aparecer\\xE1n aqu\\xED...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"copy-btn\",\n        onClick: copyToClipboard,\n        children: \"Copiar Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"M4WZn7ICmyiIeSSUTa1fVIxGzM4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","yaml","jsxDEV","_jsxDEV","App","_s","_currentCategory$subc2","tagsData","setTagsData","selectedTags","setSelectedTags","Set","selectedCategory","setSelectedCategory","selectedSubcategory","setSelectedSubcategory","fetch","then","response","ok","Error","status","text","console","log","substring","data","load","catch","error","alert","handleCategoryChange","event","_tagsData$category","category","target","value","type","Object","keys","values","length","partialTag","prev","next","Array","from","forEach","existingTag","startsWith","delete","add","handleSubcategoryChange","_currentCategory$subc","subcat","currentCategory","subcategories","getValueDisplay","name","handleValueSelect","newTag","removeTag","tag","copyToClipboard","sort","join","navigator","clipboard","writeText","mainCategories","entries","filter","map","id","getCategoryDisplayName","a","b","localeCompare","description","split","word","charAt","toUpperCase","slice","hasValues","subcategory","_category$subcategori","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","replace","e","disabled","key","onClick","title","readOnly","placeholder","_c","$RefreshReg$"],"sources":["/home/amuriel/GameDataBase/tag-generator2/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport yaml from 'js-yaml';\nimport './App.css';\n\ninterface TagValue {\n  name?: string;\n  capacities?: string[];\n  manufacturer?: string;\n}\n\ninterface TagData {\n  type: string;\n  description?: string;\n  values?: Record<string, string | TagValue>;\n  subcategories?: Record<string, {\n    description?: string;\n    values: Record<string, string | TagValue>;\n  }>;\n}\n\nfunction App() {\n  const [tagsData, setTagsData] = useState<Record<string, TagData>>({});\n  const [selectedTags, setSelectedTags] = useState<Set<string>>(new Set());\n  const [selectedCategory, setSelectedCategory] = useState<string>('');\n  const [selectedSubcategory, setSelectedSubcategory] = useState<string>('');\n\n  useEffect(() => {\n    // Cambiado para depurar el proceso de carga\n    fetch('/tags.yml')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.text();\n      })\n      .then(text => {\n        console.log('YAML text loaded:', text.substring(0, 100)); // Mostrar primeros 100 caracteres\n        const data = yaml.load(text) as Record<string, TagData>;\n        console.log('Parsed data:', data);\n        setTagsData(data);\n      })\n      .catch(error => {\n        console.error('Error detallado:', error);\n        alert('Error al cargar las categorías. Revisa la consola para más detalles.');\n      });\n  }, []);\n\n  const handleCategoryChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const category = event.target.value;\n    setSelectedCategory(category);\n    setSelectedSubcategory('');\n\n    // Si la categoría es simple y no tiene valores, generar tag parcial\n    if (tagsData[category]?.type === 'simple' && \n        Object.keys(tagsData[category].values || {}).length === 0) {\n      const partialTag = `${category}#`;\n      \n      setSelectedTags(prev => {\n        const next = new Set(prev);\n        Array.from(next).forEach(existingTag => {\n          if (existingTag.startsWith(`${category}#`)) {\n            next.delete(existingTag);\n          }\n        });\n        next.add(partialTag);\n        return next;\n      });\n\n      // Resetear selecciones\n      setSelectedCategory('');\n    }\n  };\n\n  const handleSubcategoryChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const subcat = event.target.value;\n    setSelectedSubcategory(subcat);\n    \n    // Si la subcategoría no tiene valores, generar tag parcial\n    if (currentCategory?.type === 'nested' && \n        Object.keys(currentCategory.subcategories?.[subcat].values || {}).length === 0) {\n      const partialTag = `${selectedCategory}#${subcat}`;\n      \n      // Eliminar tag anterior de la misma categoría si existe\n      setSelectedTags(prev => {\n        const next = new Set(prev);\n        Array.from(next).forEach(existingTag => {\n          if (existingTag.startsWith(`${selectedCategory}#`)) {\n            next.delete(existingTag);\n          }\n        });\n        next.add(partialTag);\n        return next;\n      });\n\n      // Resetear selecciones\n      setSelectedCategory('');\n      setSelectedSubcategory('');\n    }\n  };\n\n  const getValueDisplay = (value: string | TagValue): string => {\n    if (typeof value === 'string') return value;\n    if (value.name) return value.name;\n    return 'Sin descripción';\n  };\n\n  const handleValueSelect = (value: string) => {\n    let newTag: string;\n    \n    if (currentCategory?.type === 'simple') {\n      newTag = `${selectedCategory}#${value}`;\n    } else if (currentCategory?.type === 'nested' && selectedSubcategory) {\n      newTag = `${selectedCategory}#${selectedSubcategory}:${value}`;\n    } else {\n      return;\n    }\n\n    // Eliminar cualquier tag existente de la misma categoría principal\n    setSelectedTags(prev => {\n      const next = new Set(prev);\n      // Buscar y eliminar tags existentes de la misma categoría\n      Array.from(next).forEach(existingTag => {\n        if (existingTag.startsWith(`${selectedCategory}#`)) {\n          next.delete(existingTag);\n        }\n      });\n      // Añadir el nuevo tag\n      next.add(newTag);\n      return next;\n    });\n\n    // Resetear selecciones\n    setSelectedCategory('');\n    setSelectedSubcategory('');\n  };\n\n  const removeTag = (tag: string) => {\n    setSelectedTags(prev => {\n      const next = new Set(prev);\n      next.delete(tag);\n      return next;\n    });\n  };\n\n  const copyToClipboard = () => {\n    const text = Array.from(selectedTags).sort().join('\\n');\n    navigator.clipboard.writeText(text);\n    alert('Tags copiados al portapapeles!');\n  };\n\n  const mainCategories = Object.entries(tagsData)\n    .filter(([category]) => \n      // Filtrar solo las categorías principales válidas\n      category !== 'tag_structure' && \n      category !== 'search' &&\n      (tagsData[category].type === 'simple' || tagsData[category].type === 'nested')\n    )\n    .map(([category, data]) => ({\n      id: category,\n      name: getCategoryDisplayName(category, data)\n    }))\n    .sort((a, b) => a.name.localeCompare(b.name));\n\n  function getCategoryDisplayName(category: string, data: TagData): string {\n    // Usar description si existe, sino formatear el nombre de la categoría\n    return data.description || \n           category.split('_')\n                  .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n                  .join(' ');\n  }\n\n  const currentCategory = selectedCategory ? tagsData[selectedCategory] : null;\n\n  // Añadir log para depurar las categorías principales\n  console.log('Current tagsData:', tagsData);\n  console.log('Main categories:', mainCategories);\n\n  const hasValues = (category: TagData, subcategory?: string): boolean => {\n    if (category.type === 'simple') {\n      return Object.keys(category.values || {}).length > 0;\n    } else if (category.type === 'nested' && subcategory) {\n      return Object.keys(category.subcategories?.[subcategory].values || {}).length > 0;\n    }\n    return false;\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Generador de Tags</h1>\n\n      <div className=\"category-section\">\n        <h3>Seleccionar Tags</h3>\n        <div className=\"dropdown-group\">\n          <select value={selectedCategory} onChange={handleCategoryChange}>\n            <option value=\"\">Seleccionar Categoría...</option>\n            {mainCategories.map(category => (\n              <option key={category.id} value={category.id}>\n                {category.name}\n              </option>\n            ))}\n          </select>\n\n          {currentCategory?.type === 'nested' && (\n            <select value={selectedSubcategory} onChange={handleSubcategoryChange}>\n              <option value=\"\">Seleccionar Subcategoría...</option>\n              {Object.entries(currentCategory.subcategories || {}).map(([subcat, data]) => (\n                <option key={subcat} value={subcat}>\n                  {data.description || subcat.replace(/_/g, ' ')}\n                </option>\n              ))}\n            </select>\n          )}\n\n          {((currentCategory?.type === 'simple' && hasValues(currentCategory)) ||\n            (currentCategory?.type === 'nested' && selectedSubcategory && hasValues(currentCategory, selectedSubcategory))) && (\n            <select \n              onChange={(e) => handleValueSelect(e.target.value)}\n              value=\"\"\n              disabled={!selectedCategory || (currentCategory?.type === 'nested' && !selectedSubcategory)}\n            >\n              <option value=\"\">Seleccionar Valor...</option>\n              {currentCategory?.type === 'simple' && currentCategory.values && \n                Object.entries(currentCategory.values)\n                  .sort(([a], [b]) => a.localeCompare(b))\n                  .map(([key, value]) => (\n                    <option key={key} value={key}>\n                      {getValueDisplay(value)}\n                    </option>\n                  ))\n              }\n              {currentCategory?.type === 'nested' && selectedSubcategory && \n                Object.entries(currentCategory.subcategories?.[selectedSubcategory].values || {})\n                  .sort(([a], [b]) => a.localeCompare(b))\n                  .map(([key, value]) => (\n                    <option key={key} value={key}>\n                      {getValueDisplay(value)}\n                    </option>\n                  ))\n              }\n            </select>\n          )}\n        </div>\n      </div>\n\n      <div className=\"selected-tags\">\n        <h3>Tags Seleccionados:</h3>\n        <div className=\"tags-list\">\n          {Array.from(selectedTags).sort().map(tag => (\n            <span key={tag} className=\"tag\">\n              {tag}\n              <button onClick={() => removeTag(tag)} title=\"Eliminar\">&times;</button>\n            </span>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"output-section\">\n        <textarea\n          readOnly\n          value={Array.from(selectedTags).sort().join('\\n')}\n          placeholder=\"Los tags seleccionados aparecerán aquí...\"\n        />\n        <button className=\"copy-btn\" onClick={copyToClipboard}>\n          Copiar Tags\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}