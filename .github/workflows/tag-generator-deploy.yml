name: Deploy Tag Generator to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  pull_request:
    types: [ opened, reopened, synchronize, edited ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./tag-generator2

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.3'

      # Generate package-lock.json efficiently
      - name: Generate package-lock.json
        run: |
          # Remove existing lock file if exists
          rm -f package-lock.json
          # Install only prod dependencies to generate a clean lock file
          npm i --package-lock-only --ignore-scripts --no-audit
          # Verify lock file was created
          test -f package-lock.json || exit 1

      # Install dependencies using the generated lock file
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      # Build and optimize
      - name: Build project
        run: |
          NODE_ENV=production npm run build
          cp public/tags.yml build/
        env:
          PUBLIC_URL: /GameDataBase
          CI: true
          GENERATE_SOURCEMAP: false

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './tag-generator2/build'

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
