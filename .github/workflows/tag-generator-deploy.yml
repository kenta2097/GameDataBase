name: Deploy Tag Generator to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  pull_request:
    types: [ opened, reopened, synchronize, edited ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./tag-generator2

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.3'

      # Optimizado el caché de dependencias
      - name: Cache dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: |
            **/node_modules
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      # Instalación optimizada de dependencias
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci --prefer-offline --no-audit --no-optional

      # Build optimizado
      - name: Build project
        run: |
          # Limpiar caché y directorios antiguos
          rm -rf build
          npm cache verify
          
          # Construir con optimizaciones
          NODE_ENV=production npm run build
          
          # Copiar archivos necesarios y optimizar
          cp public/tags.yml build/
          
          # Comprimir archivos estáticos
          find build -type f -name "*.js" -exec gzip -k {} \;
          find build -type f -name "*.css" -exec gzip -k {} \;
          find build -type f -name "*.html" -exec gzip -k {} \;
        env:
          PUBLIC_URL: /GameDataBase
          CI: true
          GENERATE_SOURCEMAP: false

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './tag-generator2/build'

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
